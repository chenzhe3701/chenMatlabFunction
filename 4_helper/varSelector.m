% With all the varialbes in the current working space,
% run this function to select all the Desired Variables
% selected varialbes will be column vectors in outMax
% refMat = [1:n', x(:), y(:)] to record original data location
% [NR, NC] = origial data # of rows and columns
%
% Zhe Chen, 2015-9-24

function varSelector()
close all;
[NR,NC] = evalin('base','size(U)');
evalin('base','[NR,NC] = size(U);');
evalin('base','xSurf = x{1}; ySurf = y{1}; IdSurf = ID{1}; dToBoundary2D = dToBoundary{1};');

% grab 'base' workspace variables info
varStruct = evalin('base','whos;');
varCell = struct2cell(varStruct)';      % all var names in base WS

% find variables (size=[NR,NC]) that can generate microstructure maps
varList = [];
nVar = 0;
for ii=1:length(varCell)
    if isequal(varCell{ii,2},[NR,NC])
        nVar = nVar + 1;
        varList{nVar} = varCell{ii,1};
    end
end

% draw user interface
S.fh = figure('position',[100,100,800,600]);
S.varList = uitable('parent',S.fh,...
    'data',varList,...
    'visible','off');
S.varSelectedTF = uitable('parent',S.fh,...
    'data',ones(0,nVar),...         % set selected to false
    'visible','off');
for ii = 1:nVar
    S.varSelectBox(ii) = uicontrol('parent',S.fh,...
        'style','checkbox',...
        'string',varList{ii},...
        'position',[floor((ii-1)/20)*150+10, mod(ii-1,20)*20+10, 140, 20],...
        'foregroundcolor',[0 0 0],...
        'value',0);             % set default to the var is NOT seleted
end

S.criterionPanel = uipanel('parent',S.fh,...
    'title','Select Criterion',...
    'unit','pixel',...
    'position',[140,440,450,120]);

S.criterionVariable1 = uicontrol('parent',S.fh,...
    'style','edit',...
    'string','',...
    'position',[150,450,140,20],...
    'HorizontalAlign','left');
uicontrol('style','tex',...
    'Parent',S.fh,...
    'position',[150 470 100 20],...
    'HorizontalAlign','left',...
    'string','variable 1');
S.criterion11 = uicontrol('parent',S.fh,...
    'style','edit',...
    'string','',...
    'position',[300,450,90,20],...
    'HorizontalAlign','left');
uicontrol('style','tex',...
    'Parent',S.fh,...
    'position',[300 470 100 20],...
    'HorizontalAlign','left',...
    'string','criterion 1');
S.criterionOperator1 = uicontrol('parent',S.fh,...
    'style','edit',...
    'string','',...
    'position',[400,450,60,20],...
    'HorizontalAlign','left');
uicontrol('style','tex',...
    'Parent',S.fh,...
    'position',[400 470 60 20],...
    'HorizontalAlign','left',...
    'string','operator');
S.criterion12 = uicontrol('parent',S.fh,...
    'style','edit',...
    'string','',...
    'position',[480,450,90,20],...
    'HorizontalAlign','left');
uicontrol('style','tex',...
    'Parent',S.fh,...
    'position',[480 470 100 20],...
    'HorizontalAlign','left',...
    'string','criterion 2');

S.criterionVariable2 = uicontrol('parent',S.fh,...
    'style','edit',...
    'string','',...
    'position',[150,500,140,20],...
    'HorizontalAlign','left');
uicontrol('style','tex',...
    'Parent',S.fh,...
    'position',[150 520 100 20],...
    'HorizontalAlign','left',...
    'string','variable 2');
S.criterion21 = uicontrol('parent',S.fh,...
    'style','edit',...
    'string','',...
    'position',[300,500,90,20],...
    'HorizontalAlign','left');
uicontrol('style','tex',...
    'Parent',S.fh,...
    'position',[300 520 100 20],...
    'HorizontalAlign','left',...
    'string','criterion 1');
S.criterionOperator2 = uicontrol('parent',S.fh,...
    'style','edit',...
    'string','',...
    'position',[400,500,60,20],...
    'HorizontalAlign','left');
uicontrol('style','tex',...
    'Parent',S.fh,...
    'position',[400 520 60 20],...
    'HorizontalAlign','left',...
    'string','operator');
S.criterion22 = uicontrol('parent',S.fh,...
    'style','edit',...
    'string','',...
    'position',[480,500,90,20],...
    'HorizontalAlign','left');
uicontrol('style','tex',...
    'Parent',S.fh,...
    'position',[480 520 100 20],...
    'HorizontalAlign','left',...
    'string','criterion 2');


S.execute = uicontrol('style','push',...
    'parent',S.fh,...
    'string','execute',...
    'position',[10,440,100,40]);

for ii = 1:nVar
    set(S.varSelectBox(ii),'callback',{@var_select_press,S,ii});
end
set(S.execute,'callback',{@execute_press,S});
end

function var_select_press(varargin)
S1 = varargin{3};
ii = varargin{4};

data = get(S1.varSelectedTF,'data');
data(ii) = get(S1.varSelectBox(ii),'value');
set(S1.varSelectedTF,'data',data);
end

% when call this function, the up-WS is 'base', not varSelector.
function execute_press(varargin)

S1 = varargin{3};
varSelectedTF = get(S1.varSelectedTF,'data');

% (1) select row_indices based on criterion
% (2) build outMat from (a) selected variables and (b) row_indices
% (3) get rid of nans

% (1) built outMat=[variable in columns] and refMat=[1:n',x,y]
evalin('base',['refMat=[x{1}(:),y{1}(:)];',...
    'refMat=[(1:size(refMat,1))',char(39),',refMat];']);
evalin('base','outMat=[]; varList=[]; jj=0;');
jj = 0;

for ii=1:length(varSelectedTF)
    if varSelectedTF(ii)
        evalin('base',['jj=jj+1;','outMat(:,jj)=',get(S1.varSelectBox(ii),'string'),'(:);',...
            'varList{jj,1}=',char(39),get(S1.varSelectBox(ii),'string'),char(39),';']);
        jj = jj + 1;
    end
end
evalin('base','clear jj;');

% (1) find ind_num in order to eliminate nan values in outMat
evalin('base', 'ind_num= find(sum(isnan(outMat),2)==0);');

% (2) find ind_criterion according to criterion
str1 = get(S1.criterionVariable1,'string');       % str of the criterion var
str2 = get(S1.criterionVariable2,'string');       % str of the criterion var

% find ind_row (in outMat) according to criterion 1
if ~isempty(str1);
    evalin('base',['ind_criterion = find(',str1,'(:)',...
        get(S1.criterion11,'string'),');']);
    if ~isempty(get(S1.criterion12,'string'));
        evalin('base',['ind_criterion2 = find(',str1,'(:)',...
            get(S1.criterion12,'string'),');']);
        if strcmp(get(S1.criterionOperator1,'string'),'&')
            evalin('base',['ind_criterion = intersect(ind_criterion, ind_criterion2);',...
                'clear ind_criterion2;']);
        elseif strcmp(get(S1.criterionOperator1,'string'),'|')
            evalin('base',['ind_criterion = union(ind_criterion, ind_criterion2);',...
                'clear ind_criterion2;']);
        end
    end
else
    evalin('base', 'ind_criterion = (1:length(xSurf(:)));');
end

% find ind_row (in outMat) according to criterion 2
if ~isempty(str2);
    evalin('base',['ind_criterion1 = find(',str2,'(:)',...
        get(S1.criterion21,'string'),');']);
    if ~isempty(get(S1.criterion22,'string'));
        evalin('base',['ind_criterion2 = find(',str2,'(:)',...
            get(S1.criterion22,'string'),');']);
        if strcmp(get(S1.criterionOperator2,'string'),'&')
            evalin('base',['ind_criterion1 = intersect(ind_criterion1, ind_criterion2);',...
                'clear ind_criterion2;']);
        elseif strcmp(get(S1.criterionOperator2,'string'),'|')
            evalin('base',['ind_criterion1 = union(ind_criterion1, ind_criterion2);',...
                'clear ind_criterion2;']);
        end
    end
else
    evalin('base', 'ind_criterion1 = (1:length(xSurf(:)));');
end
evalin('base',['ind_criterion = intersect(ind_criterion, ind_criterion1);',...
    'clear ind_criterion1;']);
% (3) final output
evalin('base', ['inds = intersect(ind_num, ind_criterion);',...
    'outMat = outMat(inds,:); refMat = refMat(inds,:);',...
    'clear ind_num ind_criterion;']);

end



